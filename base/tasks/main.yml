---
- name: Set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  notify: restart rsyslog

- name: Clean /etc/hosts
  template:
    src: etc/hosts.j2
    dest: /etc/hosts
  notify: restart rsyslog

- name: Set DHCP config
  template:
    src: etc/dhcp/dhclient.conf.j2
    dest: /etc/dhcp/dhclient.conf

# fixes repos on first install
- name: Update APT
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Add backports repo
  apt_repository:
    repo: "deb https://archive.debian.org/debian {{ ansible_distribution_release }}-backports main"
    state: present
    update_cache: yes

- name: Install system packages
  apt:
    pkg: "{{ base_default_system_packages + system_packages }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Generate required locales
  locale_gen:
    name: "{{ item }}"
    state: present
  with_items: "{{ system_locales }}"

- name: Set default locale
  template:
    src: etc/default/locale.j2
    dest: /etc/default/locale

- name: Set default timezone
  timezone:
    name: "{{ system_timezone }}"
  notify: restart cron

- name: Set adduser dir mode
  lineinfile:
    regexp: "^DIR_MODE="
    line: "DIR_MODE=0750"
    dest: /etc/adduser.conf

- name: Change skel permissions
  file:
    path: /etc/skel/{{ item }}
    mode: o-r
  with_items:
  - .bash_logout
  - .bashrc
  - .profile

- name: Use full hostname in prompt
  replace:
    regexp: '^(.*PS1.*)\\h(.*)'
    replace: '\g<1>\\H\g<2>'
    path: "/etc/skel/.bashrc"

- name: Add ssh user groups
  group:
    name: "{{ item }}"
    system: yes
  with_items:
  - ssh-users
  - "{{ ssh_extra_user_groups }}"

- name: Create users
  user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    append: yes
    groups: "{{ item.groups }}"
    shell: "{{ item.shell|default('/bin/bash') }}"
  with_items:
  - "{{ default_users }}"
  - "{{ users }}"
  loop_control:
    label: "{{ item.name }}"

- name: Assign authorized keys - default users
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ lookup('file', item.1) }}"
  with_subelements:
  - "{{ default_users }}"
  - authorized_keys
  loop_control:
    label: "{{ item.0.name }} - {{ item.1 }}"

- name: Assign authorized keys - users
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ lookup('file', item.1) }}"
  with_subelements:
  - "{{ users }}"
  - authorized_keys
  loop_control:
    label: "{{ item.0.name }} - {{ item.1 }}"

- name: Install openssh from backports
  apt:
    pkg: openssh-server
    default_release: "{{ ansible_distribution_release }}-backports"
    state: latest
    update_cache: yes
    cache_valid_time: 3600

- name: Configure sshd
  template:
    src: etc/ssh/sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0644
    validate: "sshd -t -f %s"
  register: sshd_status

- name: Add system known hosts
  lineinfile:
    dest: /etc/ssh/ssh_known_hosts
    line: "{{ item }}"
    create: yes
    owner: root
    group: root
    mode: 0644
  with_items: "{{ known_hosts }}"

- name: Add to profile.d
  template:
    src: "{{ item.src }}"
    dest: "/etc/profile.d/{{ item.dest }}"
    owner: root
    group: root
    mode: "0644"
  with_items: "{{ base_profile_config }}"

- include_tasks: vagrant.yml
  when: vagrant
