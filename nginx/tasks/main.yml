---
- import_tasks: add-key.yml

- name: Add upstream repository
  apt_repository:
    repo: deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] https://nginx.org/packages/debian {{ ansible_distribution_release }} nginx

# passlib for basic auth
- name: Install Nginx
  apt:
    pkg: "nginx,python3-passlib,ssl-cert"
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Install certbot plugin
  apt:
    name: python3-certbot-nginx
    state: present
    update_cache: yes
    cache_valid_time: 3600
  when: nginx_certbot_plugin

- name: Configure Nginx
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: reload nginx

- name: Remove default Nginx site
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent
  notify: reload nginx

- name: Add web user to ssl-cert group
  user:
    name: "{{ nginx_user }}"
    append: yes
    groups: ssl-cert
  notify: reload nginx

- name: Create directories
  file:
    path: /etc/nginx/{{ item }}
    state: directory
  with_items:
  - sites-available
  - sites-enabled
  - snippets

- name: Install conf
  template:
    src: "templates/nginx/conf/{{ item.src }}"
    dest: "/etc/nginx/conf.d/{{ item.dest }}"
  with_items: "{{ nginx_conf }}"
  notify: reload nginx

- name: Install snippets
  template:
    src: "templates/nginx/snippets/{{ item.src }}"
    dest: "/etc/nginx/snippets/{{ item.dest }}"
  with_items: "{{ nginx_snippets }}"
  notify: reload nginx

- name: Install vhosts
  template:
    src: "templates/nginx/vhosts/{{ item.src }}"
    dest: "/etc/nginx/sites-available/{{ item.dest }}"
  with_items: "{{ nginx_vhosts }}"
  notify: reload nginx

- name: Create basic auth files
  copy:
    dest: "{{ item.path }}"
    owner: "{{ nginx_user }}"
    mode: 0600
    content: ""
    force: false
  with_items: "{{ nginx_basic_auth }}"
  loop_control:
    label: "{{ item.path }}"

- name: Write basic auth passwords
  htpasswd:
    crypt_scheme: ldap_sha1
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    path: "{{ item.path }}"
  with_items: "{{ nginx_basic_auth }}"
  notify: reload nginx
  loop_control:
    label: "{{ item.path }}"

- name: Enable vhosts
  file:
    path: "/etc/nginx/sites-enabled/{{ item.dest }}"
    state: "{{ 'link' if item.enabled else 'absent' }}"
    src: "{{ '/etc/nginx/sites-available/' ~ item.dest if item.enabled else omit }}"
  with_items: "{{ nginx_vhosts }}"
  notify: reload nginx
