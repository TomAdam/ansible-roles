---
# passlib for basic auth
- name: Install Nginx
  apt:
    pkg: "{{ nginx_package }},python-passlib"
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Configure Nginx
  template:
    src: etc/nginx/nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: restart nginx

- name: Disable default Nginx site
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx

- name: Add web user to ssl-cert group
  user:
    name: "{{ nginx_user }}"
    append: yes
    groups: ssl-cert
  notify: restart nginx

- name: Install conf
  template:
    src: "templates/nginx/conf/{{ item.src }}"
    dest: "/etc/nginx/conf.d/{{ item.dest }}"
  with_items: "{{ nginx_conf }}"
  notify: restart nginx

- name: Install snippets
  template:
    src: "templates/nginx/snippets/{{ item.src }}"
    dest: "/etc/nginx/snippets/{{ item.dest }}"
  with_items: "{{ nginx_snippets }}"
  notify: restart nginx

- name: Install vhosts
  template:
    src: "templates/nginx/vhosts/{{ item.src }}"
    dest: "/etc/nginx/sites-available/{{ item.dest }}"
  with_items: "{{ nginx_vhosts }}"
  notify: restart nginx

- name: Create basic auth files
  copy:
    dest: "{{ item.path }}"
    owner: "{{ nginx_user }}"
    mode: 0600
    content: ""
    force: false
  with_items: "{{ nginx_basic_auth }}"
  no_log: true

- name: Write basic auth passwords
  htpasswd:
    crypt_scheme: ldap_sha1
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    path: "{{ item.path }}"
  with_items: "{{ nginx_basic_auth }}"
  notify: restart nginx
  no_log: true

- name: Enable vhosts
  file:
    path: "/etc/nginx/sites-enabled/{{ item.dest }}"
    state: "{{ 'link' if item.enabled else 'absent' }}"
    src: "{{ '/etc/nginx/sites-available/' ~ item.dest if item.enabled else omit }}"
  with_items: "{{ nginx_vhosts }}"
  notify: restart nginx
